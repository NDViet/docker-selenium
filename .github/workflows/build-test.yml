name: Build & test

on:
  workflow_call:
    inputs:
      release:
        description: 'Test a new release process'
        required: false
        type: boolean
        default: false
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

permissions:
  contents: read

jobs:
  docker-test:
    uses: ./.github/workflows/docker-test.yml
    with:
      release: ${{ inputs.release == 'true' }}

  helm-chart-test:
    uses: ./.github/workflows/helm-chart-test.yml
    with:
      release: ${{ inputs.release == 'true' }}

  build-and-test:
    name: Build & test Docker images with random user
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        use-random-user: [false, true]
    steps:
      - uses: actions/checkout@main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        with:
          platforms: linux/amd64,linux/arm64
          use: false
      - name: Output Docker info
        run: docker info
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: '3.11'
          check-latest: true
      - name: Get branch name (only for push to branch)
        if: github.event_name == 'push'
        run: echo "BRANCH=$(echo ${PUSH_BRANCH##*/})" >> $GITHUB_ENV
        env:
          PUSH_BRANCH: ${{ github.ref }}
      - name: Get target branch name (only for PRs)
        if: github.event_name == 'pull_request'
        run: echo "BRANCH=$(echo ${TARGET_BRANCH##*/})" >> $GITHUB_ENV
        env:
          TARGET_BRANCH: ${{ github.head_ref }}
      - name: Output branch name
        run: echo ${BRANCH}
      - name: Set Selenium base version
        if: inputs.release != 'true'
        run: |
          make set_build_nightly
          cat .env | xargs -I {} echo {} >> $GITHUB_ENV
      - name: Sets build date
        run: |
          echo "BUILD_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV
          echo "AUTHORS=${AUTHORS}" >> $GITHUB_ENV
        env:
          AUTHORS: ${{ vars.AUTHORS || 'SeleniumHQ' }}
      - name: Build Docker images
        uses: nick-invision/retry@master
        with:
          timeout_minutes: 12
          max_attempts: 3
          retry_wait_seconds: 60
          command: VERSION=${BRANCH} BUILD_DATE=${BUILD_DATE} make build
      - name: Count image layers
        run: VERSION=${BRANCH} BUILD_DATE=${BUILD_DATE} make count_image_layers
      - name: Test Docker images
        uses: nick-invision/retry@master
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            USE_RANDOM_USER_ID=${USE_RANDOM_USER} VERSION=${BRANCH} BUILD_DATE=${BUILD_DATE} make test
        env:
          USE_RANDOM_USER: ${{ matrix.use-random-user }}
